#!/bin/bash

# Import utils.h
. $(dirname ${BASH_SOURCE[0]})/utils.sh
RequireDocker
PermissionsCheck

MOUNTSOURCE="$(GetAbsPath ${BASH_SOURCE[0]})"
pushd ${MOUNTSOURCE}/../ >/dev/null
MOUNTSOURCE="$(pwd)/workspace"
popd >/dev/null

# Validates the Workspace directory/repository
# ARGUMENTS:
#   $1 [WORKSPACE] - The main application workspace or repository.
#
function CheckWorkspace()
{
    if [ -d $1 ]
        return 0
    else
        return 1
    fi
}

# Validates the Data Directory
# ARGUMENTS:
#   $1 [DATADIR]   - Data directory.
#   $2 [WORKSPACE] - The main application workspace
#
function CheckDataDirectory()
{
    if [ -d $1 ]; then
        if find $2 -name \*$1\* -and -type d; then
            echo "Data directory cannot be a subdirectory of the workspace" > &2
            return 1
        fi
        return 0
    else
        return 1
    fi
}

function GetBuilder()
{
    local repo2docker_remote=https://github.com/jupyter/repo2docker.git

    # As of 2-21-2019, repo2docker is not published on hub.docker.com
    # with a latest tag. The tagging strategy is to use the commit hash
    # for the repository's HEAD as the image tag.
    #
    tag=$(git ls-remote $repo2docker_remote HEAD | awk '{ print $1 }')
    tag=${tag: 0: 8}

    docker pull jupyter/repo2docker:${tag}
}

GetBuilder

function Build()
{

    # The Docker Socket needs to be mounted to the
    # repo2docker image when issuing a docker run
    # command as docker is a dependency of repo2docker
    #
    C_DOCKER_SOCKET=/var/run/docker.sock

    # Alias the jupyter-repo2docker command
    R2D="docker run \
        --rm \
        --mount type=bind,source=${MOUNTSOURCE},target=/workspace
        --volume "${C_DOCKER_SOCKET}":${C_DOCKER_SOCKET} \
        jupyter/repo2docker:${tag} \
        jupyter-repo2docker"

    if [ -z "${APPLICATION}" ]; then
        APPLICATION="cloud-notes"
    fi

    # Use repo2docker to build the workspace folder.
    $R2D \
        --no-run \
        --debug \
        --image-name ${APPLICATION} \
        --user-name $(id -urn) \
        --user-id $(id -ur) \
        /workspace
}

Build
